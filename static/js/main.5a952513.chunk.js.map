{"version":3,"sources":["data/reduxSlice.js","Component/Input/Input.js","Component/WorkList/WorkList.js","Component/WorkList/Work.js","App.js","reportWebVitals.js","data/store.js","index.js"],"names":["reduxSlice","createSlice","name","initialState","todoList","reducers","add","state","action","push","payload","check","map","item","index","id","done","actions","Input","useState","todo","setTodo","dispatch","useDispatch","className","onSubmit","e","preventDefault","Date","now","handelSubmit","type","onChange","target","value","WorkList","list","Checkbox","checked","inputProps","Work","work","useSelector","todos","class","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","todoReducer","ReactDOM","render","store","document","getElementById"],"mappings":"6QAIMA,EAAaC,YAAY,CAC7BC,KAAM,QACNC,aAJmB,CAACC,SAAS,IAK7BC,SAAU,CACNC,IAAI,SAACC,EAAOC,GACND,EAAMH,SAASK,KAAKD,EAAOE,UAGjCC,MAAM,SAACJ,EAAOC,GAEZD,EAAMH,SAASQ,KAAI,SAACC,EAAKC,GAYvB,OAVGD,EAAKE,KAAOP,EAAOE,WAEH,IAAdG,EAAKG,KAENH,EAAKG,MAAO,EAGZH,EAAKG,MAAO,GAGT,S,EAMYhB,EAAWiB,QAA1BX,E,EAAAA,IAAKK,E,EAAAA,MAEJX,IAAf,Q,eCEekB,EA/BD,WAAO,IAAD,EACMC,mBAAS,KADf,mBACXC,EADW,KACLC,EADK,KAGZC,EAAWC,cAejB,OACE,qBAAKC,UAAU,eAAf,SACE,uBAAMA,UAAU,aAAaC,SAAU,SAACC,GAAD,OAdtB,SAACA,GACpBA,EAAEC,iBAEFL,EACEhB,EAAI,CACFO,KAAMO,EACNJ,MAAM,EACND,GAAIa,KAAKC,SAOmCC,CAAaJ,IAA3D,UACE,uBAAOK,KAAK,OAAOC,SAAU,SAACN,GAAD,OAAOL,EAAQK,EAAEO,OAAOC,UACrD,wBAAQV,UAAU,MAAMO,KAAK,SAA7B,uB,gBCAOI,EArBE,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEZd,EAAWC,cAOjB,OACE,sBAAKC,UAAU,iBAAf,UACE,cAACa,EAAA,EAAD,CACEC,QAASF,EAAKpB,KACdgB,SATe,WAEnBV,EAASX,EAAMyB,EAAKrB,MAQhBwB,WAAY,CAAE,aAAc,sBAE7BH,EAAKvB,SCHG2B,G,MAbF,WACX,IAAMC,EAAOC,aAAY,SAACnC,GAAD,OAAWA,EAAMoC,MAAMvC,YAEhD,OACE,sBAAKwC,MAAM,iBAAX,UACC,2CACEH,EAAK7B,KAAI,SAACQ,GAAD,OACR,cAAC,EAAD,CAAwBgB,KAAMhB,GAAfA,EAAKL,YCEb8B,MAXf,WACE,OACE,sBAAKrB,UAAU,OAAf,UACE,cAAC,EAAD,IACA,8BACE,cAAC,EAAD,UCGOsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCJCQ,cAAe,CAC5BC,QAAS,CACLb,MAAOc,KCGbC,IAASC,OACP,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BhB,M","file":"static/js/main.5a952513.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {todoList:[]};\r\n\r\nconst reduxSlice = createSlice({\r\n  name: \"todos\",\r\n  initialState,\r\n  reducers: {\r\n      add:(state, action)=>{\r\n            state.todoList.push(action.payload)\r\n      },\r\n\r\n      check:(state, action)=>{\r\n\r\n        state.todoList.map((item,index) =>{\r\n        \r\n          if(item.id === action.payload)\r\n          {\r\n            if(item.done === true)\r\n            {\r\n              item.done = false;\r\n            }\r\n            else{\r\n              item.done = true;\r\n            }\r\n          }\r\n          return(0);\r\n        })\r\n      }\r\n  },\r\n});\r\n\r\nexport const {add, check } = reduxSlice.actions;\r\n// export const selectTodo  = state => state.todos.todoList;\r\nexport default reduxSlice.reducer;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { add } from \"../../data/reduxSlice\";\r\nimport \"./Input.css\";\r\n\r\nconst Input = () => {\r\n  const [todo, setTodo] = useState(\" \");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const handelSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(\r\n      add({\r\n        item: todo,\r\n        done: false,\r\n        id: Date.now(),\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"align-center\">\r\n      <form className=\"input-form\" onSubmit={(e) => handelSubmit(e)}>\r\n        <input type=\"text\" onChange={(e) => setTodo(e.target.value)} />\r\n        <button className=\"btn\" type=\"submit\">\r\n          ADD\r\n        </button>\r\n      </form>\r\n     \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport \"./WorkList.css\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {check} from \"../../data/reduxSlice\";\r\n\r\nconst WorkList = ({ list }) => {\r\n  // const [checked, setChecked] = React.useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = () => {\r\n    // setChecked(event.target.checked);\r\n    dispatch(check(list.id))\r\n  };\r\n  //   console.log(list.item)\r\n  return (\r\n    <div className=\"todo-container\">\r\n      <Checkbox\r\n        checked={list.done}\r\n        onChange={handleChange}\r\n        inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n      />\r\n      {list.item}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorkList;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport WorkList from \"./WorkList\";\r\nimport \"./Work.css\";\r\n\r\nconst Work = () => {\r\n  const work = useSelector((state) => state.todos.todoList);\r\n\r\n  return (\r\n    <div class=\"list-container\">\r\n     <h3>Todo List</h3>\r\n      {work.map((todo) => (\r\n        <WorkList key={todo.id} list={todo}></WorkList>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Work;\r\n","import \"./App.css\";\nimport Input from \"./Component/Input/Input\";\nimport Work from \"./Component/WorkList/Work\";\n\nfunction App() {\n  return (\n    <div className=\"main\">\n      <Input />\n      <div>\n        <Work />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport todoReducer from './reduxSlice'; \r\n\r\nexport default configureStore({\r\n  reducer: {\r\n      todos: todoReducer,\r\n  },\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './data/store';\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}